#!/usr/bin/env python3

from sudoku import Sudoku, crange
import sys
import time

if __name__ == "__main__":

    # each Sudoku puzzle block has m rows and n columns
    (m, n) = map(int, input().split())

    # initialize the puzzle solver
    puzzle = Sudoku(m, n)

    # N = m*n is the number of rows/columns in the puzzle
    N = puzzle.size()

    # set the initially known values on the puzzle
    for i in crange(1, N):
        row = input().split()
        for j in crange(1, N):
            k = row[j - 1]
            if k.isdigit():
                puzzle.set_cell_value(i, j, int(k))
                
    start_time = time.time()

    # solve the puzzle
    if not puzzle.solve():
        sys.stdout.write("Sudoku puzzle is not valid.\n")
        exit(1)
        
    end_time = time.time()
    
    assignments = 0

    # print the solution
    digits = len(str(N))
    pad = lambda k: str(k).rjust(digits)
    for i in crange(1, N):
        for j in crange(1, N):
            k = puzzle.get_cell_value(i, j)
            assignments += 1
            sys.stdout.write("%s" % pad(k) + (" " if j < N else ""))
        sys.stdout.write("\n")
        
    # Print the assignments and the time taken

    print("\nAssignments:", assignments)
    print("Time elapsed: %.5f sec." % (end_time - start_time))
        
    sys.stdout.write("\n")